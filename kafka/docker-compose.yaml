---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0-1-ubi8
    restart: always
    container_name: zookeeper
    ports:
      - 2181:2181
    #networks:
    #  - confluent
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:6.0.0-1-ubi8
    restart: always
    container_name: kafka
    ports:
      - 9092:9092
    #networks:
    #  - confluent
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_SEGMENT_BYTES: 536870912
      KAFKA_LOG_RETENTION_BYTES: 536870912
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0-1-ubi8
    restart: always
    container_name: schema-registry
    ports:
      - "8081:8081"
    #networks:
    #  - confluent
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
      KAFKA_REST_CUB_KAFKA_TIMEOUT: 180 # https://github.com/confluentinc/cp-docker-images/issues/807

  # rest-proxy:
  #   image: confluentinc/cp-kafka-rest:latest
  #   container_name: rest-proxy
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     KAFKA_REST_HOST_NAME: rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
  #     #KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
